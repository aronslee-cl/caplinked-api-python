# coding: utf-8

"""
    CapLinked API v1.0

    Core information security endpoints for managing files/folders, users/groups, uploads/downloads, and more.

    OpenAPI spec version: 2017-05-23
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class FolderMeta(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'name': 'str',
        'path': 'str',
        'owner_type': 'str',
        'owner_id': 'int',
        'created_at': 'str',
        'updated_at': 'str',
        'index': 'int',
        'last_updated_user_id': 'int',
        'parent_path': 'str',
        'parent_id': 'int',
        'id_tree': 'int'
    }

    attribute_map = {
        'id': 'id',
        'name': 'name',
        'path': 'path',
        'owner_type': 'owner_type',
        'owner_id': 'owner_id',
        'created_at': 'created_at',
        'updated_at': 'updated_at',
        'index': 'index',
        'last_updated_user_id': 'last_updated_user_id',
        'parent_path': 'parent_path',
        'parent_id': 'parent_id',
        'id_tree': 'id_tree'
    }

    def __init__(self, id=None, name=None, path=None, owner_type=None, owner_id=None, created_at=None, updated_at=None, index=None, last_updated_user_id=None, parent_path=None, parent_id=None, id_tree=None):
        """
        FolderMeta - a model defined in Swagger
        """

        self._id = None
        self._name = None
        self._path = None
        self._owner_type = None
        self._owner_id = None
        self._created_at = None
        self._updated_at = None
        self._index = None
        self._last_updated_user_id = None
        self._parent_path = None
        self._parent_id = None
        self._id_tree = None

        if id is not None:
          self.id = id
        if name is not None:
          self.name = name
        if path is not None:
          self.path = path
        if owner_type is not None:
          self.owner_type = owner_type
        if owner_id is not None:
          self.owner_id = owner_id
        if created_at is not None:
          self.created_at = created_at
        if updated_at is not None:
          self.updated_at = updated_at
        if index is not None:
          self.index = index
        if last_updated_user_id is not None:
          self.last_updated_user_id = last_updated_user_id
        if parent_path is not None:
          self.parent_path = parent_path
        if parent_id is not None:
          self.parent_id = parent_id
        if id_tree is not None:
          self.id_tree = id_tree

    @property
    def id(self):
        """
        Gets the id of this FolderMeta.

        :return: The id of this FolderMeta.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this FolderMeta.

        :param id: The id of this FolderMeta.
        :type: int
        """

        self._id = id

    @property
    def name(self):
        """
        Gets the name of this FolderMeta.

        :return: The name of this FolderMeta.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this FolderMeta.

        :param name: The name of this FolderMeta.
        :type: str
        """

        self._name = name

    @property
    def path(self):
        """
        Gets the path of this FolderMeta.

        :return: The path of this FolderMeta.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """
        Sets the path of this FolderMeta.

        :param path: The path of this FolderMeta.
        :type: str
        """

        self._path = path

    @property
    def owner_type(self):
        """
        Gets the owner_type of this FolderMeta.

        :return: The owner_type of this FolderMeta.
        :rtype: str
        """
        return self._owner_type

    @owner_type.setter
    def owner_type(self, owner_type):
        """
        Sets the owner_type of this FolderMeta.

        :param owner_type: The owner_type of this FolderMeta.
        :type: str
        """

        self._owner_type = owner_type

    @property
    def owner_id(self):
        """
        Gets the owner_id of this FolderMeta.

        :return: The owner_id of this FolderMeta.
        :rtype: int
        """
        return self._owner_id

    @owner_id.setter
    def owner_id(self, owner_id):
        """
        Sets the owner_id of this FolderMeta.

        :param owner_id: The owner_id of this FolderMeta.
        :type: int
        """

        self._owner_id = owner_id

    @property
    def created_at(self):
        """
        Gets the created_at of this FolderMeta.

        :return: The created_at of this FolderMeta.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """
        Sets the created_at of this FolderMeta.

        :param created_at: The created_at of this FolderMeta.
        :type: str
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """
        Gets the updated_at of this FolderMeta.

        :return: The updated_at of this FolderMeta.
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """
        Sets the updated_at of this FolderMeta.

        :param updated_at: The updated_at of this FolderMeta.
        :type: str
        """

        self._updated_at = updated_at

    @property
    def index(self):
        """
        Gets the index of this FolderMeta.

        :return: The index of this FolderMeta.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """
        Sets the index of this FolderMeta.

        :param index: The index of this FolderMeta.
        :type: int
        """

        self._index = index

    @property
    def last_updated_user_id(self):
        """
        Gets the last_updated_user_id of this FolderMeta.

        :return: The last_updated_user_id of this FolderMeta.
        :rtype: int
        """
        return self._last_updated_user_id

    @last_updated_user_id.setter
    def last_updated_user_id(self, last_updated_user_id):
        """
        Sets the last_updated_user_id of this FolderMeta.

        :param last_updated_user_id: The last_updated_user_id of this FolderMeta.
        :type: int
        """

        self._last_updated_user_id = last_updated_user_id

    @property
    def parent_path(self):
        """
        Gets the parent_path of this FolderMeta.

        :return: The parent_path of this FolderMeta.
        :rtype: str
        """
        return self._parent_path

    @parent_path.setter
    def parent_path(self, parent_path):
        """
        Sets the parent_path of this FolderMeta.

        :param parent_path: The parent_path of this FolderMeta.
        :type: str
        """

        self._parent_path = parent_path

    @property
    def parent_id(self):
        """
        Gets the parent_id of this FolderMeta.

        :return: The parent_id of this FolderMeta.
        :rtype: int
        """
        return self._parent_id

    @parent_id.setter
    def parent_id(self, parent_id):
        """
        Sets the parent_id of this FolderMeta.

        :param parent_id: The parent_id of this FolderMeta.
        :type: int
        """

        self._parent_id = parent_id

    @property
    def id_tree(self):
        """
        Gets the id_tree of this FolderMeta.

        :return: The id_tree of this FolderMeta.
        :rtype: int
        """
        return self._id_tree

    @id_tree.setter
    def id_tree(self, id_tree):
        """
        Sets the id_tree of this FolderMeta.

        :param id_tree: The id_tree of this FolderMeta.
        :type: int
        """

        self._id_tree = id_tree

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, FolderMeta):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
